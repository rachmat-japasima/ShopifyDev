{%- style -%}
  .top-bar {
      background-color:{{section.settings.top-bar-bg-color}};
  }
{%- endstyle -%}

<style>
		.announcement-container {
			overflow: hidden;
		}

		.announcement-slider {
			position: absolute;
			top: .35rem;
			bottom: .35rem;
      left: 50%;
      transform: translateX(-50%);
			z-index: 0;
		}

		.announcement-container .is-active {
			z-index: 1;
		}

		.top-bar-text {
			opacity: 0;
			transform: translateY(100%);
			margin: auto;
			transition: all .5s ease;
		}

		.is-active .top-bar-text {
			opacity: 1;
			transform: translateY(0);
		}

		.__slide .top-bar-text {
			opacity: 0;
			transform: translateY(-100%);
		}
</style>

{%- liquid
  assign sub_menu = linklists[section.settings.sub_menu_link_list]
-%}
<div class="top-bar">
    <div class="page-width">
      <div class="grid grid-top-section">
        <div class="small--one-whole medium-up--one-third">
            {%- if section.settings.text-left != blank -%}
                <a class="top-bar-text" href="{{ section.settings.text-left-link }}" >{{ section.settings.text-left }}</a>
            {%- endif -%}   
        </div>
        <div class="small--one-whole medium-up--one-third grid__item grid__item-announcement ">
          {%- for block in section.blocks -%}
            {%- if block.settings.text != blank -%}
              <div class="announcement-slider">
                  <a class="top-bar-text" href="{{ block.settings.link }}" >{{ block.settings.text }}</a>
              </div>
            {%- endif -%}       
          {%- endfor -%}
        </div>
        <div class="small--one-whole medium-up--one-third grid__item small--hide">
            {%- render 'header-desktop-nav-sub', sub_menu: sub_menu, dropdown_alignment: dropdown_alignment -%}     
      </div>
        
    </div>
    </div>
</div>

<script>
		let index = 0;

		let intervalInSeconds = {{ section.settings.slider_interval }};

		if (document.querySelectorAll('.announcement-slider').length > 0) {

			const firstInit = setTimeout(() => {
				const announcementsEl = document.querySelectorAll('.announcement-slider');
				announcementsEl[0].classList.add('is-active');
			}, 500);

			const ticker = setInterval(() => {
				const announcementsEl = document.querySelectorAll('.announcement-slider');

				announcementsEl[index].classList.add('__slide');
				announcementsEl[index].classList.remove('is-active');

				index = (index + 1) % announcementsEl.length;

				announcementsEl[index].classList.add('is-active');
			}, intervalInSeconds * 1000);

			const slideRemoverTicker = setInterval(() => {
				const announcementsEl = document.querySelectorAll('.announcement-slider');
				announcementsEl.forEach(el => {
					el.classList.remove('__slide');
				});
			}, (intervalInSeconds + 0.3) * 1000)

			window.addEventListener('beforeunload', () => {
				clearTimeout(firstInit);
				clearInterval(ticker);
				clearInterval(slideRemoverTicker);
				window.removeEventListener('resize', setContainerHeight)
			})
		}
</script>

{% schema %}
{
  "name": "Section top",
  "settings":[
    {
      "type": "color",
      "id": "top-bar-bg-color",
      "label": "Top bar background color",
      "default":"#2F5325"
    },
    {
      "type": "text",
      "id": "text-left",
      "label": "Top bar text left",
      "default":"refer to a friend, get $10 "
    },
    {
      "type": "url",
      "id": "text-left-link",
      "label": "Top bar text left link"
    },
    {
      "type": "link_list",
      "id": "sub_menu_link_list",
      "label": "Sub dropdown menu"
    },
    {
      "type": "number",
      "id": "slider_interval",
      "label": "Slider Interval (seconds)",
      "default": 5
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Announcement Text",
          "default":"FREE DELIVERY TO METRO OVER $100*"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Announcement Link"
        }
      ]
    }
  ]
}
{% endschema %}
